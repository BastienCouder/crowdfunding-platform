name: Deploy Laravel

on:
  push:
    branches: [main, master]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # For proper git operations in Ansible

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: 'pip'  # Cache pip dependencies

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ansible-core==2.16.2 ansible-vault  # Use core version

      - name: Secure SSH setup
        run: |
          install -m 600 -D /dev/null ~/.ssh/deploy_key
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
          ssh-keyscan -H ${{ secrets.SSH_IP_SERVER }} > ~/.ssh/known_hosts
          cat <<EOF > ~/.ssh/config
          Host deploy-target
            HostName ${{ secrets.SSH_IP_SERVER }}
            User ${{ secrets.SSH_USER }}
            IdentityFile ~/.ssh/deploy_key
            StrictHostKeyChecking no
          EOF
          chmod 600 ~/.ssh/*

      - name: Verify SSH connection
        run: ssh -T deploy-target "echo 'SSH connection successful'"

      - name: Handle Ansible Vault
        env:
          VAULT_PASS: ${{ secrets.ANSIBLE_VAULT_PASSWORD }}
        run: |
          # Temporarily decrypt vault
          ansible-vault decrypt \
            --vault-password-file <(printf '%s' "$VAULT_PASS") \
            ansible/group_vars/vault.yml
          
          # Ensure re-encryption happens even if deployment fails
          function cleanup {
            ansible-vault encrypt \
              --vault-password-file <(printf '%s' "$VAULT_PASS") \
              ansible/group_vars/vault.yml
          }
          trap cleanup EXIT

      - name: Run Ansible deployment
        env:
          VAULT_PASS: ${{ secrets.ANSIBLE_VAULT_PASSWORD }}
        run: |
          ansible-playbook \
            -i ansible/inventory.ini \
            --vault-password-file <(printf '%s' "$VAULT_PASS") \
            ansible/playbook-deploy.yml \
            -e "SSH_PRIVATE_KEY='${{ secrets.SSH_PRIVATE_KEY }}'" \
            -e "CI_COMMIT_SHA=${{ github.sha }}"

      - name: Verify deployment
        run: |
          ssh deploy-target <<'EOF'
          cd /var/www/laravel
          php artisan --version
          php artisan config:clear
          EOF