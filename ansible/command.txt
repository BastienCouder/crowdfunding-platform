// ansible playbook
ansible-playbook -i inventory.ini playbook-deploy.yml

// ansible playbook with vault
ansible-playbook -i inventory.ini playbook-deploy.yml --vault-password-file .vault_pass.txt

// ansible playbook with vault and ask vault pass
ansible-playbook -i inventory.ini playbook-deploy.yml --ask-vault-pass

# Pour la production
ansible-playbook -i environments/production/inventory playbook-deploy.yml -e "env=production" --ask-vault-pass

# Pour le staging
ansible-playbook -i environments/staging/inventory playbook-deploy.yml -e "env=staging" --ask-vault-pass


ansible-vault create environments/production/group_vars/vault.yml
ansible-vault create environments/staging/group_vars/vault.yml

# Build production
docker build -t myapp-ansible:prod -f Dockerfile.prod .

# Build staging
docker build -t myapp-ansible:staging -f Dockerfile.staging .

# Production (mot de passe interactif)
docker run -it -v $(pwd)/.vault-pass-prod:/ansible/.vault-pass myapp-ansible:prod

# Staging (avec fichier de mot de passe)
docker run -v $(pwd)/.vault-pass-staging:/ansible/.vault-pass:ro \
  myapp-ansible:staging \
  --vault-password-file /ansible/.vault-pass
  
// Lancer le playbook en dry-run
ansible-playbook playbook.yml --check --diff

// create file
ansible-vault create vars/secrets.yml

// view file
ansible-vault view vars/secrets.yml

// encrypt file
ansible-vault encrypt vars/secrets.yml

// decrypt file
ansible-vault decrypt vars/secrets.yml

// file password
.vault_pass.txt
echo "mon_mot_de_passe_vault" > .vault_pass.txt

//secure
chmod 600 vars/secrets.yml


// install vault
curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys AA16FCBCA621E701
sudo apt update && sudo apt install vault


// Dockerfile
docker build -t ansible-runner .
docker run --rm ansible-runner