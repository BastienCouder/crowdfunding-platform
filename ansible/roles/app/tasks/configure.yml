---
- name: Charger les secrets
  include_vars:
    file: "{{ playbook_dir }}/../environments/{{ env }}/group_vars/all/vault.yml"
    name: secrets
  no_log: true

- name: Créer .env
  template:
    src: "{{ playbook_dir }}/../templates/laravel/.env.j2"
    dest: "{{ app_root }}/.env"
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    mode: "0640"
  no_log: true

- name: Créer le répertoire de l'application
  file:
    path: "{{ app_root }}"
    state: directory
    owner: "{{ app_user }}"
    group: "{{ app_user }}"
    mode: '0755'

- name: Cloner le dépôt Git
  git:
    repo: "{{ app_repo }}"
    dest: "{{ app_root }}"
    version: "{{ app_branch }}"
    depth: 1
    force: true

- name: Installer les dépendances Composer
  composer:
    command: install
    working_dir: "{{ app_root }}"
    no_dev: false

- name: Créer le fichier .env
  template:
    src: "templates/laravel/.env.j2"
    dest: "{{ app_root }}/.env"
    owner: "{{ app_user }}"
    group: "{{ app_group }}"
    mode: "0640"
  no_log: true

- name: Configurer les permissions du stockage
  file:
    path: "{{ app_root }}/storage"
    state: directory
    mode: '0775'
    recurse: true

- name: Exécuter les migrations (si demandé)
  command: php artisan migrate --force
  args:
    chdir: "{{ app_root }}"
  when: "'migrate' in ansible_run_tags"

- name: Configuration Nginx
  hosts: webservers
  connection: local
  become: true
  tasks:
    - name: Déployer la configuration Nginx
      template:
        src: "templates/nginx/laravel.conf.j2"
        dest: "/etc/nginx/sites-available/{{ app_name }}.conf"
      notify: reload nginx

    - name: Activer le site
      file:
        src: "/etc/nginx/sites-available/{{ app_name }}.conf"
        dest: "/etc/nginx/sites-enabled/{{ app_name }}.conf"
        state: link

- name: Configuration Certbot
  hosts: certbot
  connection: local
  become: true
  tasks:
    - name: Installer les certificats SSL
      include_role:
        name: certbot
      tags: certbot

  handlers:
    - name: reload nginx
      service:
        name: nginx
        state: reloaded